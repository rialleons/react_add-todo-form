{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/NewTodo/NewTodo.tsx","services/getUserById.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","TodoForm","onAdd","useState","setTitle","hasTitleError","setHasTitleError","userId","setUserId","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","formattedTitle","trim","replace","htmlFor","type","placeholder","value","onChange","target","disabled","users","getUserById","usersFromServer","find","todosWithUser","getNewTodoId","Math","max","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a64d5b9.chunk.js","sourcesContent":["import React from 'react';\n\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  user: { name, email },\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './TodoInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id, completed, title, user,\n  },\n}) => (\n  <article\n    data-id={id}\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">{title}</h2>\n\n    {!!user && (\n      <UserInfo user={user} />\n    )}\n  </article>\n);\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\n\nimport './NewTodo.scss';\nimport users from '../../api/users';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n\n    const formattedTitle = (\n      trimmedTitle.replace(/[^А-ЩЬЮЯҐЄІЇа-щьюяґєіїA-Za-z0-9 ]/g, '')\n    );\n\n    setHasTitleError(!formattedTitle);\n    setHasUserIdError(!userId);\n\n    if (!formattedTitle || !userId) {\n      return;\n    }\n\n    onAdd({\n      id: 0,\n      title: formattedTitle,\n      completed: false,\n      userId,\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"todo-title\">Title: </label>\n\n        <input\n          id=\"todo-title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\"> Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"todo-user-id\">User: </label>\n\n        <select\n          id=\"todo-user-id\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {users.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\"> Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/NewTodo';\n\nimport { TodoWithUser } from './types/TodoWithUser';\nimport { getUserById } from './services/getUserById';\nimport { Todo } from './types/Todo';\n\nconst todosWithUser = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>(todosWithUser);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      user: getUserById(todo.userId),\n      id: getNewTodoId(todos),\n    };\n\n    setTodos((currentTodos) => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onAdd={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}